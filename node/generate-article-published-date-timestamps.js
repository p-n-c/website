// Generated by Copilot

import fs from 'fs'
import path from 'path'

// Get the current timestamp in the desired format
const currentTime = new Date().toISOString()

// Meta tag to be added
const metaTag = `<meta property="article:published_time" content="${currentTime}" />\n`

/**
 * Function to add the meta tag to a file
 * @param {string} filePath - The path to the file
 */
function addMetaTag(filePath) {
  // Read the file content
  fs.readFile(filePath, 'utf8', (err, data) => {
    if (err) {
      console.error(`Error reading file ${filePath}:`, err)
      return
    }

    // Check if the meta tag already exists
    if (!data.includes('property="article:published_time"')) {
      // Add the meta tag after the opening <head> tag
      const updatedContent = data.replace('<head>', `<head>\n${metaTag}`)

      // Write the updated content back to the file
      fs.writeFile(filePath, updatedContent, 'utf8', (err) => {
        if (err) {
          console.error(`Error writing file ${filePath}:`, err)
          return
        }
        console.log(`Added meta tag to ${filePath}`)
      })
    }
  })
}

export const generateArticlePublishedDateTimestamps = (folders) => {
  // Iterate through the folders and process each file
  folders.forEach((folder) => {
    fs.readdir(folder, (err, files) => {
      if (err) {
        console.error(`Error reading directory ${folder}:`, err)
        return
      }

      files.forEach((file) => {
        const filePath = path.join(folder, file)
        if (file.endsWith('.html')) {
          addMetaTag(filePath)
        }
      })
    })
  })
}
